[{"C:\\STUDY\\allEars\\all-ears-front\\src\\index.js":"1","C:\\STUDY\\allEars\\all-ears-front\\src\\App.js":"2","C:\\STUDY\\allEars\\all-ears-front\\src\\modules\\index.js":"3","C:\\STUDY\\allEars\\all-ears-front\\src\\lib\\asyncUtils.js":"4","C:\\STUDY\\allEars\\all-ears-front\\src\\api\\posts.js":"5","C:\\STUDY\\allEars\\all-ears-front\\src\\About.js":"6","C:\\STUDY\\allEars\\all-ears-front\\src\\routes\\routes.js":"7","C:\\STUDY\\allEars\\all-ears-front\\src\\modules\\boardReducer.js":"8","C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\BoardListContainer.js":"9","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\BoardList.js":"10","C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\BoardContainer.js":"11","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\Board.js":"12","C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\BoardInsertContainer.js":"13","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\BoardInsert.js":"14","C:\\STUDY\\allEars\\all-ears-front\\src\\lib\\hooks.js":"15","C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoTemplate.js":"16","C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoHead.js":"17","C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoList.js":"18","C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoItem.js":"19","C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoCreate.js":"20","C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\Landing.js":"21","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\Navbars\\DemoNavbar.js":"22","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\Footers\\CardsFooter.js":"23","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\IndexSections\\Download.js":"24","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\IndexSections\\Modals.js":"25","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\IndexSections\\Alerts.js":"26"},{"size":1336,"mtime":1611048855481,"results":"27","hashOfConfig":"28"},{"size":778,"mtime":1611122605811,"results":"29","hashOfConfig":"28"},{"size":173,"mtime":1610521474939,"results":"30","hashOfConfig":"28"},{"size":4567,"mtime":1610952268983,"results":"31","hashOfConfig":"28"},{"size":1406,"mtime":1610951641012,"results":"32","hashOfConfig":"28"},{"size":537,"mtime":1610416115436,"results":"33","hashOfConfig":"34"},{"size":1557,"mtime":1611121530267,"results":"35","hashOfConfig":"28"},{"size":3294,"mtime":1611026436489,"results":"36","hashOfConfig":"28"},{"size":1625,"mtime":1611109100417,"results":"37","hashOfConfig":"28"},{"size":3473,"mtime":1611127287797,"results":"38","hashOfConfig":"28"},{"size":1040,"mtime":1610529417048,"results":"39","hashOfConfig":"28"},{"size":393,"mtime":1610529629110,"results":"40","hashOfConfig":"28"},{"size":874,"mtime":1611037216256,"results":"41","hashOfConfig":"28"},{"size":598,"mtime":1611037333807,"results":"42","hashOfConfig":"28"},{"size":451,"mtime":1611037812206,"results":"43","hashOfConfig":"28"},{"size":640,"mtime":1611040303258,"results":"44","hashOfConfig":"28"},{"size":760,"mtime":1611040355971,"results":"45","hashOfConfig":"28"},{"size":627,"mtime":1611040523951,"results":"46","hashOfConfig":"28"},{"size":1365,"mtime":1611040500610,"results":"47","hashOfConfig":"28"},{"size":2046,"mtime":1611040610642,"results":"48","hashOfConfig":"28"},{"size":8317,"mtime":1611129786117,"results":"49","hashOfConfig":"28"},{"size":11772,"mtime":1611048706274,"results":"50","hashOfConfig":"28"},{"size":6814,"mtime":1611048702622,"results":"51","hashOfConfig":"28"},{"size":7437,"mtime":1611047808538,"results":"52","hashOfConfig":"28"},{"size":10017,"mtime":1611125168910,"results":"53","hashOfConfig":"28"},{"size":2361,"mtime":1611127541745,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"y1msxu",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1efztuw",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\STUDY\\allEars\\all-ears-front\\src\\index.js",[],["116","117"],"C:\\STUDY\\allEars\\all-ears-front\\src\\App.js",["118"],"C:\\STUDY\\allEars\\all-ears-front\\src\\modules\\index.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\lib\\asyncUtils.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\api\\posts.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\About.js",[],["119","120"],"C:\\STUDY\\allEars\\all-ears-front\\src\\routes\\routes.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\modules\\boardReducer.js",["121"],"import produce from 'immer'; // immer 불러오기\r\nimport {\r\n    createPromiseThunk,\r\n    createPromiseThunkById,\r\n    reducerUtils,\r\n    handleAsyncActions,\r\n    handleAsyncActionsById\r\n} from '../lib/asyncUtils';\r\nimport * as postsAPI from '../api/posts'; // api/posts 안의 함수 모두 불러오기\r\nimport { createAction } from 'redux-actions';\r\n\r\n// 액션 타입 정의\r\nconst GET_BOARD_LIST = 'board/GET_BOARD_LIST';\r\nconst GET_BOARD_LIST_SUCCESS = 'board/GET_BOARD_LIST_SUCCESS';\r\nconst GET_BOARD_LIST_ERROR = 'board/GET_BOARD_LIST_ERROR';\r\n\r\nconst GET_BOARD_DTL = 'board/GET_BOARD_DTL';\r\nconst GET_BOARD_DTL_SUCCESS = 'board/GET_BOARD_DTL_SUCCESS';\r\nconst GET_BOARD_DTL_ERROR = 'board/GET_BOARD_DTL_ERROR';\r\n\r\nconst INSERT_BOARD = 'board/INSERT_BOARD';\r\nconst INSERT_BOARD_SUCCESS = 'board/INSERT_BOARD_SUCCESS';\r\nconst INSERT_BOARD_ERROR = 'board/INSERT_BOARD_ERROR';\r\n\r\nconst DELETE_BOARD = 'board/DELETE_BOARD';\r\nconst DELETE_BOARD_SUCCESS = 'board/DELETE_BOARD_SUCCESS';\r\nconst DELETE_BOARD_ERROR = 'board/DELETE_BOARD_ERROR';\r\n\r\nconst BOARD_TEST = 'board/TEST';\r\n\r\n// 액션 생성함수 정의\r\nexport const getBoardList = createPromiseThunk(GET_BOARD_LIST, postsAPI.getBoardList);\r\nexport const getBoardDtl = createPromiseThunkById(GET_BOARD_DTL, postsAPI.getBoardDtl);\r\nexport const insertBoard = createPromiseThunk(INSERT_BOARD, postsAPI.insertBoard);\r\nexport const deleteBoard = createPromiseThunk(DELETE_BOARD, postsAPI.deleteBoard);\r\nexport const boardTest = createAction(BOARD_TEST, (text, text2) => ({ text, text2, id: 3 }));\r\n// 초기상태 정의\r\nconst initialState = {\r\n    boards: reducerUtils.initial(),\r\n    board: {},\r\n    result: reducerUtils.initial()\r\n}\r\n\r\n// 리듀서 작성\r\nexport default function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BOARD_LIST:\r\n        case GET_BOARD_LIST_SUCCESS:\r\n        case GET_BOARD_LIST_ERROR:\r\n            return handleAsyncActions(GET_BOARD_LIST, 'boards', true)(state, action);\r\n        case GET_BOARD_DTL:\r\n        case GET_BOARD_DTL_SUCCESS:\r\n        case GET_BOARD_DTL_ERROR:\r\n            return handleAsyncActionsById(GET_BOARD_DTL, 'board', true)(state, action);\r\n        case INSERT_BOARD:\r\n        case INSERT_BOARD_ERROR:\r\n        case INSERT_BOARD_SUCCESS:\r\n            return handleAsyncActions(INSERT_BOARD, 'result', true)(state, action);\r\n        // return {\r\n        //     ...state,\r\n        //     boards: reducerUtils.success((state.boards.data).concat(action.payload.data))\r\n        // }\r\n        case DELETE_BOARD:\r\n        case DELETE_BOARD_ERROR:\r\n        case DELETE_BOARD_SUCCESS:\r\n            return handleAsyncActions(DELETE_BOARD, 'result', true)(state, action);\r\n            // return {\r\n            //     ...state,\r\n            //     boards: reducerUtils.success((state.boards.data).filter((board) => board.boardSeq !== action.payload.data))\r\n            // }\r\n        case BOARD_TEST:\r\n            console.log(action.payload);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// 3번째 인자를 사용하면 withExtraArgument 에서 넣어준 값들을 사용 할 수 있습니다.\r\nexport const goToBoardInsert = () => (dispatch, getState, { history }) => {\r\n    history.push('/board/insert');\r\n};","C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\BoardListContainer.js",["122","123","124","125","126","127"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport BoardList from '../components/BoardList';\r\nimport { getBoardList, goToBoardInsert, boardTest, deleteBoard, insertBoard } from '../modules/boardReducer';\r\nimport BoardInsert from \"../components/BoardInsert\";\r\nimport { useInputs } from \"../lib/hooks\";\r\n\r\nfunction BoardListContainer() {\r\n    const { boards, result } = useSelector(state => state.boardReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ {boardTitle, boardCn}, onChange, reset] = useInputs({\r\n        boardTitle: \"\",\r\n        boardCn: \"\"\r\n    });\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(insertBoard({boardTitle, boardCn}));\r\n        alert(\"등록완료\");\r\n        reset();\r\n    }, [{boardTitle, boardCn}]);\r\n\r\n    const onDelete = useCallback((boardSeq) => {\r\n        dispatch(deleteBoard(boardSeq));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoardList());\r\n    }, [result]);\r\n\r\n    if (boards.loading) return <div>로딩중...</div>;\r\n    if (boards.error) return <div>에러 발생!</div>;\r\n    if (!boards.data) return null;\r\n\r\n    return (\r\n        <>\r\n            <BoardInsert board={{boardTitle, boardCn}} onChange={onChange} onSubmit={onSubmit} />\r\n            <BoardList boards={boards.data} deleteBoard={onDelete} />\r\n            <button onClick={() => dispatch(boardTest(\"test\", \"test2\"))}>테스트</button>\r\n            {/* <button onClick={() => dispatch(goToBoardInsert())}>등록</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(BoardListContainer);","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\BoardList.js",["128","129","130","131"],"C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\BoardContainer.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\components\\Board.js",["132"],"import React from 'react';\r\n\r\nfunction Board({ board }) {\r\n  const { boardTitle, boardCn, boardPhotoSbst } = board;\r\n  const style = {\r\n    width: \"300px\"\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{boardTitle}</h1>\r\n      <p>{boardCn}</p>\r\n      {boardPhotoSbst != null ? <img style={style} src={\"data:image/jpeg; base64, \"+ boardPhotoSbst}/> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\BoardInsertContainer.js",["133","134","135"],"import React, { Component, useEffect, useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { insertBoard } from '../modules/boardReducer';\r\nimport BoardInsert from \"../components/BoardInsert\";\r\n\r\nfunction BoardInsertContainer() {\r\n  const [board, setBoard] = useState({\r\n    \"boardTitle\": \"\",\r\n    \"boardCn\": \"\"\r\n  });\r\n\r\n  const onChange = useCallback(e => {\r\n    setBoard({\r\n      ...board,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }, [board]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(insertBoard(board));\r\n    alert(\"등록완료\");\r\n    setBoard({\r\n      \"boardTitle\": \"\",\r\n      \"boardCn\": \"\"\r\n    });\r\n  }, [board]);\r\n\r\n  return (\r\n      <BoardInsert board={board} onChange={onChange} onSubmit={onSubmit}/>\r\n  )\r\n}\r\n\r\nexport default React.memo(BoardInsertContainer);\r\n","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\BoardInsert.js",["136"],"import React, { useState } from 'react';\r\n\r\nfunction BoardInsert({ board, onChange, onSubmit }) {\r\n    const { boardTitle, boardCn } = board;\r\n    const insertBoard = e => {\r\n        e.preventDefault();\r\n        onSubmit();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={insertBoard}>\r\n                <input name=\"boardTitle\" value={boardTitle} onChange={onChange} />\r\n                <input name=\"boardCn\" value={boardCn} onChange={onChange} />\r\n                <button>등록</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(BoardInsert);","C:\\STUDY\\allEars\\all-ears-front\\src\\lib\\hooks.js",["137"],"import React, { useCallback, useState } from 'react';\r\n\r\nexport function useInputs(initialForm) {\r\n    const [form, setForm] = useState(initialForm);\r\n    const onChange = useCallback(e => {\r\n        const {name, value} = e.target;\r\n        setForm(form => ({\r\n            ...form,\r\n            [name]: value\r\n        }));\r\n    }, []);\r\n    const reset = useCallback(() => setForm(initialForm), [initialForm]);\r\n    return [form, onChange, reset];\r\n};","C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoTemplate.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoHead.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoList.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoItem.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\study\\components\\Todo\\TodoCreate.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\containers\\Landing.js",["138","139","140","141","142","143","144","145"],"C:\\STUDY\\allEars\\all-ears-front\\src\\components\\Navbars\\DemoNavbar.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\components\\Footers\\CardsFooter.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\components\\IndexSections\\Download.js",[],"C:\\STUDY\\allEars\\all-ears-front\\src\\components\\IndexSections\\Modals.js",["146","147","148","149","150","151","152","153","154","155","156","157","158"],"/*!\r\n\r\n=========================================================\r\n* Argon Design System React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState } from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Modal,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nfunction Modals({ btnYn, btnName, modalType, board, onToggle, toggleYn}) {\r\n  const { boardTitle, boardCn } = board;\r\n  \r\n  return (\r\n    <>\r\n      {/*defaultModal */}\r\n      <Button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        onClick={onToggle}\r\n        style = {{display: btnYn ? 'block' : 'none'}}\r\n      >\r\n        {btnName}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-dialog-centered\"\r\n        isOpen={toggleYn}\r\n        toggle={onToggle}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n            {boardTitle}\r\n          </h6>\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={onToggle}\r\n          >\r\n            <span aria-hidden={true}>×</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>\r\n            {boardCn}\r\n          </p>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <Button\r\n            className=\"ml-auto\"\r\n            color=\"link\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={onToggle}\r\n          >\r\n            Close\r\n                </Button>\r\n        </div>\r\n      </Modal>\r\n      {/* <Col md=\"4\">\r\n            <Button\r\n              block\r\n              className=\"mb-3\"\r\n              color=\"warning\"\r\n              type=\"button\"\r\n              onClick={() => this.toggleModal(\"notificationModal\")}\r\n            >\r\n              Notification\r\n            </Button>\r\n            <Modal\r\n              className=\"modal-dialog-centered modal-danger\"\r\n              contentClassName=\"bg-gradient-danger\"\r\n              isOpen={this.state.notificationModal}\r\n              toggle={() => this.toggleModal(\"notificationModal\")}\r\n            >\r\n              <div className=\"modal-header\">\r\n                <h6 className=\"modal-title\" id=\"modal-title-notification\">\r\n                  Your attention is required\r\n                </h6>\r\n                <button\r\n                  aria-label=\"Close\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => this.toggleModal(\"notificationModal\")}\r\n                >\r\n                  <span aria-hidden={true}>×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"py-3 text-center\">\r\n                  <i className=\"ni ni-bell-55 ni-3x\" />\r\n                  <h4 className=\"heading mt-4\">You should read this!</h4>\r\n                  <p>\r\n                    A small river named Duden flows by their place and supplies\r\n                    it with the necessary regelialia.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <Button className=\"btn-white\" color=\"default\" type=\"button\">\r\n                  Ok, Got it\r\n                </Button>\r\n                <Button\r\n                  className=\"text-white ml-auto\"\r\n                  color=\"link\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => this.toggleModal(\"notificationModal\")}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </Modal>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Button\r\n              block\r\n              color=\"default\"\r\n              type=\"button\"\r\n              onClick={() => this.toggleModal(\"formModal\")}\r\n            >\r\n              Form\r\n            </Button>\r\n            <Modal\r\n              className=\"modal-dialog-centered\"\r\n              size=\"sm\"\r\n              isOpen={this.state.formModal}\r\n              toggle={() => this.toggleModal(\"formModal\")}\r\n            >\r\n              <div className=\"modal-body p-0\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                  <CardHeader className=\"bg-white pb-5\">\r\n                    <div className=\"text-muted text-center mb-3\">\r\n                      <small>Sign in with</small>\r\n                    </div>\r\n                    <div className=\"btn-wrapper text-center\">\r\n                      <Button\r\n                        className=\"btn-icon mt-2 mb-2\"\r\n                        color=\"neutral\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                      >\r\n                        <span className=\"btn-inner--icon mr-1\">\r\n                          <img\r\n                            alt=\"...\"\r\n                            src={require(\"assets/img/icons/common/github.svg\")}\r\n                          />\r\n                        </span>\r\n                        <span className=\"btn-inner--text\">Github</span>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-icon mt-2 mb-2 ml-1\"\r\n                        color=\"neutral\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                      >\r\n                        <span className=\"btn-inner--icon mr-1\">\r\n                          <img\r\n                            alt=\"...\"\r\n                            src={require(\"assets/img/icons/common/google.svg\")}\r\n                          />\r\n                        </span>\r\n                        <span className=\"btn-inner--text\">Google</span>\r\n                      </Button>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"px-lg-5 py-lg-5\">\r\n                    <div className=\"text-center text-muted mb-4\">\r\n                      <small>Or sign in with credentials</small>\r\n                    </div>\r\n                    <Form role=\"form\">\r\n                      <FormGroup\r\n                        className={classnames(\"mb-3\", {\r\n                          focused: this.state.emailFocused\r\n                        })}\r\n                      >\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-email-83\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            onFocus={e => this.setState({ emailFocused: true })}\r\n                            onBlur={e => this.setState({ emailFocused: false })}\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        className={classnames({\r\n                          focused: this.state.passwordFocused\r\n                        })}\r\n                      >\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-lock-circle-open\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                            onFocus={e =>\r\n                              this.setState({ passwordFocused: true })\r\n                            }\r\n                            onBlur={e =>\r\n                              this.setState({ passwordFocused: false })\r\n                            }\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                      <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                        <input\r\n                          className=\"custom-control-input\"\r\n                          id=\" customCheckLogin\"\r\n                          type=\"checkbox\"\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label\"\r\n                          htmlFor=\" customCheckLogin\"\r\n                        >\r\n                          <span className=\"text-muted\">Remember me</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\">\r\n                          Sign in\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </Modal>\r\n          </Col> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Modals);","C:\\STUDY\\allEars\\all-ears-front\\src\\components\\IndexSections\\Alerts.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":7,"column":7,"nodeType":"165","messageId":"166","endLine":7,"endColumn":18},{"ruleId":"159","replacedBy":"167"},{"ruleId":"161","replacedBy":"168"},{"ruleId":"163","severity":1,"message":"169","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":15},{"ruleId":"163","severity":1,"message":"170","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"171","line":4,"column":24,"nodeType":"165","messageId":"166","endLine":4,"endColumn":39},{"ruleId":"172","severity":1,"message":"173","line":22,"column":8,"nodeType":"174","endLine":22,"endColumn":31,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":22,"column":9,"nodeType":"177","endLine":22,"endColumn":30},{"ruleId":"172","severity":1,"message":"178","line":26,"column":8,"nodeType":"174","endLine":26,"endColumn":10,"suggestions":"179"},{"ruleId":"172","severity":1,"message":"180","line":30,"column":8,"nodeType":"174","endLine":30,"endColumn":16,"suggestions":"181"},{"ruleId":"163","severity":1,"message":"182","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"183","line":5,"column":4,"nodeType":"165","messageId":"166","endLine":5,"endColumn":9},{"ruleId":"163","severity":1,"message":"184","line":12,"column":8,"nodeType":"165","messageId":"166","endLine":12,"endColumn":14},{"ruleId":"172","severity":1,"message":"185","line":15,"column":20,"nodeType":"165","endLine":15,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":12,"column":33,"nodeType":"188","endLine":12,"endColumn":103},{"ruleId":"163","severity":1,"message":"189","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"190","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"172","severity":1,"message":"178","line":28,"column":6,"nodeType":"174","endLine":28,"endColumn":13,"suggestions":"191"},{"ruleId":"163","severity":1,"message":"170","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"192","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"171","line":31,"column":24,"nodeType":"165","messageId":"166","endLine":31,"endColumn":39},{"ruleId":"163","severity":1,"message":"193","line":31,"column":41,"nodeType":"165","messageId":"166","endLine":31,"endColumn":50},{"ruleId":"172","severity":1,"message":"180","line":56,"column":6,"nodeType":"174","endLine":56,"endColumn":14,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":71,"column":20,"nodeType":"197","messageId":"198","endLine":71,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":71,"column":37,"nodeType":"197","messageId":"198","endLine":71,"endColumn":39},{"ruleId":"172","severity":1,"message":"173","line":78,"column":6,"nodeType":"174","endLine":78,"endColumn":31,"suggestions":"199"},{"ruleId":"172","severity":1,"message":"176","line":78,"column":7,"nodeType":"177","endLine":78,"endColumn":30},{"ruleId":"172","severity":1,"message":"178","line":83,"column":6,"nodeType":"174","endLine":83,"endColumn":8,"suggestions":"200"},{"ruleId":"163","severity":1,"message":"170","line":18,"column":17,"nodeType":"165","messageId":"166","endLine":18,"endColumn":25},{"ruleId":"163","severity":1,"message":"201","line":20,"column":8,"nodeType":"165","messageId":"166","endLine":20,"endColumn":18},{"ruleId":"163","severity":1,"message":"202","line":24,"column":3,"nodeType":"165","messageId":"166","endLine":24,"endColumn":7},{"ruleId":"163","severity":1,"message":"203","line":25,"column":3,"nodeType":"165","messageId":"166","endLine":25,"endColumn":13},{"ruleId":"163","severity":1,"message":"204","line":26,"column":3,"nodeType":"165","messageId":"166","endLine":26,"endColumn":11},{"ruleId":"163","severity":1,"message":"205","line":27,"column":3,"nodeType":"165","messageId":"166","endLine":27,"endColumn":12},{"ruleId":"163","severity":1,"message":"206","line":28,"column":3,"nodeType":"165","messageId":"166","endLine":28,"endColumn":7},{"ruleId":"163","severity":1,"message":"207","line":29,"column":3,"nodeType":"165","messageId":"166","endLine":29,"endColumn":8},{"ruleId":"163","severity":1,"message":"208","line":30,"column":3,"nodeType":"165","messageId":"166","endLine":30,"endColumn":18},{"ruleId":"163","severity":1,"message":"209","line":31,"column":3,"nodeType":"165","messageId":"166","endLine":31,"endColumn":17},{"ruleId":"163","severity":1,"message":"210","line":32,"column":3,"nodeType":"165","messageId":"166","endLine":32,"endColumn":13},{"ruleId":"163","severity":1,"message":"211","line":34,"column":3,"nodeType":"165","messageId":"166","endLine":34,"endColumn":6},{"ruleId":"163","severity":1,"message":"212","line":35,"column":3,"nodeType":"165","messageId":"166","endLine":35,"endColumn":6},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'GlobalStyle' is assigned a value but never used.","Identifier","unusedVar",["213"],["214"],"'produce' is defined but never used.","'useState' is defined but never used.","'goToBoardInsert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'boardCn', 'boardTitle', 'dispatch', and 'reset'. Either include them or remove the dependency array.","ArrayExpression",["215"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ObjectExpression","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["217"],"'Link' is defined but never used.","'Badge' is defined but never used.","'Modals' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'useEffect' is defined but never used.",["218"],"'React' is defined but never used.","'boardTest' is defined but never used.",["219"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["220"],["221"],"'classnames' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'InputGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"226","fix":"230"},{"desc":"222","fix":"231"},{"desc":"224","fix":"232"},"Update the dependencies array to be: [boardCn, boardTitle, dispatch, reset]",{"range":"233","text":"234"},"Update the dependencies array to be: [dispatch]",{"range":"235","text":"236"},"Update the dependencies array to be: [dispatch, result]",{"range":"237","text":"238"},"Update the dependencies array to be: [board, dispatch]",{"range":"239","text":"240"},{"range":"241","text":"238"},{"range":"242","text":"234"},{"range":"243","text":"236"},[801,824],"[boardCn, boardTitle, dispatch, reset]",[929,931],"[dispatch]",[1002,1010],"[dispatch, result]",[705,712],"[board, dispatch]",[1875,1883],[2435,2460],[2584,2586]]